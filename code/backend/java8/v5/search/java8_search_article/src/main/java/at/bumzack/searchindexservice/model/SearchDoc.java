/*
 * Search Index Index Service
 * Search Index Index Service
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package at.bumzack.searchindexservice.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;


/**
 * SearchDoc
 */
@JsonPropertyOrder({
        SearchDoc.JSON_PROPERTY_ID,
        SearchDoc.JSON_PROPERTY_TCONST,
        SearchDoc.JSON_PROPERTY_TITLES,
        SearchDoc.JSON_PROPERTY_ACTORS,
        SearchDoc.JSON_PROPERTY_DIRECTORS,
        SearchDoc.JSON_PROPERTY_GENRES,
        SearchDoc.JSON_PROPERTY_CHARACTERS,
        SearchDoc.JSON_PROPERTY_RUNTIME_MINUTES,
        SearchDoc.JSON_PROPERTY_YEAR,
        SearchDoc.JSON_PROPERTY_ADULT,
        SearchDoc.JSON_PROPERTY_TITLE_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-30T00:44:23.042256+02:00[Europe/Vienna]")
public class SearchDoc {
    public static final String JSON_PROPERTY_ID = "id";
    public static final String JSON_PROPERTY_TCONST = "tconst";
    public static final String JSON_PROPERTY_TITLES = "titles";
    public static final String JSON_PROPERTY_ACTORS = "actors";
    public static final String JSON_PROPERTY_DIRECTORS = "directors";
    public static final String JSON_PROPERTY_GENRES = "genres";
    public static final String JSON_PROPERTY_CHARACTERS = "characters";
    public static final String JSON_PROPERTY_RUNTIME_MINUTES = "runtimeMinutes";
    public static final String JSON_PROPERTY_YEAR = "year";
    public static final String JSON_PROPERTY_ADULT = "adult";
    public static final String JSON_PROPERTY_TITLE_TYPE = "titleType";
    private String id;
    private String tconst;
    private List<String> titles = new ArrayList<>();
    private List<String> actors = new ArrayList<>();
    private List<String> directors = new ArrayList<>();
    private List<String> genres = new ArrayList<>();
    private List<String> characters = new ArrayList<>();
    private Integer runtimeMinutes;
    private Integer year;
    private Boolean adult;
    private String titleType;

    public SearchDoc() {
    }

    public SearchDoc id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getId() {
        return id;
    }


    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }


    public SearchDoc tconst(String tconst) {
        this.tconst = tconst;
        return this;
    }

    /**
     * Get tconst
     *
     * @return tconst
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TCONST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTconst() {
        return tconst;
    }


    @JsonProperty(JSON_PROPERTY_TCONST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTconst(String tconst) {
        this.tconst = tconst;
    }


    public SearchDoc titles(List<String> titles) {
        this.titles = titles;
        return this;
    }

    public SearchDoc addTitlesItem(String titlesItem) {
        if (this.titles == null) {
            this.titles = new ArrayList<>();
        }
        this.titles.add(titlesItem);
        return this;
    }

    /**
     * Get titles
     *
     * @return titles
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TITLES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getTitles() {
        return titles;
    }


    @JsonProperty(JSON_PROPERTY_TITLES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitles(List<String> titles) {
        this.titles = titles;
    }


    public SearchDoc actors(List<String> actors) {
        this.actors = actors;
        return this;
    }

    public SearchDoc addActorsItem(String actorsItem) {
        if (this.actors == null) {
            this.actors = new ArrayList<>();
        }
        this.actors.add(actorsItem);
        return this;
    }

    /**
     * Get actors
     *
     * @return actors
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ACTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getActors() {
        return actors;
    }


    @JsonProperty(JSON_PROPERTY_ACTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActors(List<String> actors) {
        this.actors = actors;
    }


    public SearchDoc directors(List<String> directors) {
        this.directors = directors;
        return this;
    }

    public SearchDoc addDirectorsItem(String directorsItem) {
        if (this.directors == null) {
            this.directors = new ArrayList<>();
        }
        this.directors.add(directorsItem);
        return this;
    }

    /**
     * Get directors
     *
     * @return directors
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DIRECTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getDirectors() {
        return directors;
    }


    @JsonProperty(JSON_PROPERTY_DIRECTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDirectors(List<String> directors) {
        this.directors = directors;
    }


    public SearchDoc genres(List<String> genres) {
        this.genres = genres;
        return this;
    }

    public SearchDoc addGenresItem(String genresItem) {
        if (this.genres == null) {
            this.genres = new ArrayList<>();
        }
        this.genres.add(genresItem);
        return this;
    }

    /**
     * Get genres
     *
     * @return genres
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_GENRES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getGenres() {
        return genres;
    }


    @JsonProperty(JSON_PROPERTY_GENRES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGenres(List<String> genres) {
        this.genres = genres;
    }


    public SearchDoc characters(List<String> characters) {
        this.characters = characters;
        return this;
    }

    public SearchDoc addCharactersItem(String charactersItem) {
        if (this.characters == null) {
            this.characters = new ArrayList<>();
        }
        this.characters.add(charactersItem);
        return this;
    }

    /**
     * Get characters
     *
     * @return characters
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CHARACTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getCharacters() {
        return characters;
    }


    @JsonProperty(JSON_PROPERTY_CHARACTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCharacters(List<String> characters) {
        this.characters = characters;
    }


    public SearchDoc runtimeMinutes(Integer runtimeMinutes) {
        this.runtimeMinutes = runtimeMinutes;
        return this;
    }

    /**
     * Get runtimeMinutes
     *
     * @return runtimeMinutes
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_RUNTIME_MINUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getRuntimeMinutes() {
        return runtimeMinutes;
    }


    @JsonProperty(JSON_PROPERTY_RUNTIME_MINUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRuntimeMinutes(Integer runtimeMinutes) {
        this.runtimeMinutes = runtimeMinutes;
    }


    public SearchDoc year(Integer year) {
        this.year = year;
        return this;
    }

    /**
     * Get year
     *
     * @return year
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_YEAR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getYear() {
        return year;
    }


    @JsonProperty(JSON_PROPERTY_YEAR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setYear(Integer year) {
        this.year = year;
    }


    public SearchDoc adult(Boolean adult) {
        this.adult = adult;
        return this;
    }

    /**
     * Get adult
     *
     * @return adult
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ADULT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAdult() {
        return adult;
    }


    @JsonProperty(JSON_PROPERTY_ADULT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdult(Boolean adult) {
        this.adult = adult;
    }


    public SearchDoc titleType(String titleType) {
        this.titleType = titleType;
        return this;
    }

    /**
     * Get titleType
     *
     * @return titleType
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TITLE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTitleType() {
        return titleType;
    }


    @JsonProperty(JSON_PROPERTY_TITLE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitleType(String titleType) {
        this.titleType = titleType;
    }


    /**
     * Return true if this SearchDoc object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchDoc searchDoc = (SearchDoc) o;
        return Objects.equals(this.id, searchDoc.id) &&
                Objects.equals(this.tconst, searchDoc.tconst) &&
                Objects.equals(this.titles, searchDoc.titles) &&
                Objects.equals(this.actors, searchDoc.actors) &&
                Objects.equals(this.directors, searchDoc.directors) &&
                Objects.equals(this.genres, searchDoc.genres) &&
                Objects.equals(this.characters, searchDoc.characters) &&
                Objects.equals(this.runtimeMinutes, searchDoc.runtimeMinutes) &&
                Objects.equals(this.year, searchDoc.year) &&
                Objects.equals(this.adult, searchDoc.adult) &&
                Objects.equals(this.titleType, searchDoc.titleType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, tconst, titles, actors, directors, genres, characters, runtimeMinutes, year, adult, titleType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SearchDoc {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    tconst: ").append(toIndentedString(tconst)).append("\n");
        sb.append("    titles: ").append(toIndentedString(titles)).append("\n");
        sb.append("    actors: ").append(toIndentedString(actors)).append("\n");
        sb.append("    directors: ").append(toIndentedString(directors)).append("\n");
        sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
        sb.append("    characters: ").append(toIndentedString(characters)).append("\n");
        sb.append("    runtimeMinutes: ").append(toIndentedString(runtimeMinutes)).append("\n");
        sb.append("    year: ").append(toIndentedString(year)).append("\n");
        sb.append("    adult: ").append(toIndentedString(adult)).append("\n");
        sb.append("    titleType: ").append(toIndentedString(titleType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `tconst` to the URL query string
        if (getTconst() != null) {
            joiner.add(String.format("%stconst%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTconst()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `titles` to the URL query string
        if (getTitles() != null) {
            for (int i = 0; i < getTitles().size(); i++) {
                joiner.add(String.format("%stitles%s%s=%s", prefix, suffix,
                        "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                        URLEncoder.encode(String.valueOf(getTitles().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
            }
        }

        // add `actors` to the URL query string
        if (getActors() != null) {
            for (int i = 0; i < getActors().size(); i++) {
                joiner.add(String.format("%sactors%s%s=%s", prefix, suffix,
                        "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                        URLEncoder.encode(String.valueOf(getActors().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
            }
        }

        // add `directors` to the URL query string
        if (getDirectors() != null) {
            for (int i = 0; i < getDirectors().size(); i++) {
                joiner.add(String.format("%sdirectors%s%s=%s", prefix, suffix,
                        "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                        URLEncoder.encode(String.valueOf(getDirectors().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
            }
        }

        // add `genres` to the URL query string
        if (getGenres() != null) {
            for (int i = 0; i < getGenres().size(); i++) {
                joiner.add(String.format("%sgenres%s%s=%s", prefix, suffix,
                        "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                        URLEncoder.encode(String.valueOf(getGenres().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
            }
        }

        // add `characters` to the URL query string
        if (getCharacters() != null) {
            for (int i = 0; i < getCharacters().size(); i++) {
                joiner.add(String.format("%scharacters%s%s=%s", prefix, suffix,
                        "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                        URLEncoder.encode(String.valueOf(getCharacters().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
            }
        }

        // add `runtimeMinutes` to the URL query string
        if (getRuntimeMinutes() != null) {
            joiner.add(String.format("%sruntimeMinutes%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRuntimeMinutes()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `year` to the URL query string
        if (getYear() != null) {
            joiner.add(String.format("%syear%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getYear()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `adult` to the URL query string
        if (getAdult() != null) {
            joiner.add(String.format("%sadult%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAdult()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `titleType` to the URL query string
        if (getTitleType() != null) {
            joiner.add(String.format("%stitleType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTitleType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}

