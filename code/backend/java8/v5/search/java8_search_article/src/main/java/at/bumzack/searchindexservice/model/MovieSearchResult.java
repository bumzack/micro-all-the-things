/*
 * Search Index Index Service
 * Search Index Index Service
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package at.bumzack.searchindexservice.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;


/**
 * MovieSearchResult
 */
@JsonPropertyOrder({
        MovieSearchResult.JSON_PROPERTY_MOVIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-30T00:44:23.042256+02:00[Europe/Vienna]")
public class MovieSearchResult {
    public static final String JSON_PROPERTY_MOVIES = "movies";
    private List<SearchDoc> movies = new ArrayList<>();

    public MovieSearchResult() {
    }

    public MovieSearchResult movies(List<SearchDoc> movies) {
        this.movies = movies;
        return this;
    }

    public MovieSearchResult addMoviesItem(SearchDoc moviesItem) {
        if (this.movies == null) {
            this.movies = new ArrayList<>();
        }
        this.movies.add(moviesItem);
        return this;
    }

    /**
     * Get movies
     *
     * @return movies
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_MOVIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<SearchDoc> getMovies() {
        return movies;
    }


    @JsonProperty(JSON_PROPERTY_MOVIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMovies(List<SearchDoc> movies) {
        this.movies = movies;
    }


    /**
     * Return true if this MovieSearchResult object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MovieSearchResult movieSearchResult = (MovieSearchResult) o;
        return Objects.equals(this.movies, movieSearchResult.movies);
    }

    @Override
    public int hashCode() {
        return Objects.hash(movies);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MovieSearchResult {\n");
        sb.append("    movies: ").append(toIndentedString(movies)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `movies` to the URL query string
        if (getMovies() != null) {
            for (int i = 0; i < getMovies().size(); i++) {
                if (getMovies().get(i) != null) {
                    joiner.add(getMovies().get(i).toUrlQueryString(String.format("%smovies%s%s", prefix, suffix,
                            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
                }
            }
        }

        return joiner.toString();
    }
}

