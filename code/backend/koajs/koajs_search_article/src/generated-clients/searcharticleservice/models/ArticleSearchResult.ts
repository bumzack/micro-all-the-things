/* tslint:disable */
/* eslint-disable */
/**
 * Solr Search Article Service
 * Solr Search Article Service
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime';
import type {SearchDoc} from './SearchDoc';
import {SearchDocFromJSON, SearchDocToJSON,} from './SearchDoc';

/**
 *
 * @export
 * @interface ArticleSearchResult
 */
export interface ArticleSearchResult {
    /**
     *
     * @type {SearchDoc}
     * @memberof ArticleSearchResult
     */
    article?: SearchDoc;
    /**
     *
     * @type {number}
     * @memberof ArticleSearchResult
     */
    price?: number;
    /**
     *
     * @type {number}
     * @memberof ArticleSearchResult
     */
    customerPrice?: number;
}

/**
 * Check if a given object implements the ArticleSearchResult interface.
 */
export function instanceOfArticleSearchResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ArticleSearchResultFromJSON(json: any): ArticleSearchResult {
    return ArticleSearchResultFromJSONTyped(json, false);
}

export function ArticleSearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticleSearchResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'article': !exists(json, 'article') ? undefined : SearchDocFromJSON(json['article']),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'customerPrice': !exists(json, 'customerPrice') ? undefined : json['customerPrice'],
    };
}

export function ArticleSearchResultToJSON(value?: ArticleSearchResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'article': SearchDocToJSON(value.article),
        'price': value.price,
        'customerPrice': value.customerPrice,
    };
}

