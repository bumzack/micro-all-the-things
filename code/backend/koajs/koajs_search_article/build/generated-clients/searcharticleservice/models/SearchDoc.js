"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Solr Search Article Service
 * Solr Search Article Service
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchDocToJSON = exports.SearchDocFromJSONTyped = exports.SearchDocFromJSON = exports.instanceOfSearchDoc = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SearchDoc interface.
 */
function instanceOfSearchDoc(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSearchDoc = instanceOfSearchDoc;
function SearchDocFromJSON(json) {
    return SearchDocFromJSONTyped(json, false);
}
exports.SearchDocFromJSON = SearchDocFromJSON;
function SearchDocFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'tconst': !(0, runtime_1.exists)(json, 'tconst') ? undefined : json['tconst'],
        'titles': !(0, runtime_1.exists)(json, 'titles') ? undefined : json['titles'],
        'actors': !(0, runtime_1.exists)(json, 'actors') ? undefined : json['actors'],
        'directors': !(0, runtime_1.exists)(json, 'directors') ? undefined : json['directors'],
        'genres': !(0, runtime_1.exists)(json, 'genres') ? undefined : json['genres'],
        'characters': !(0, runtime_1.exists)(json, 'characters') ? undefined : json['characters'],
        'runtimeMinutes': !(0, runtime_1.exists)(json, 'runtimeMinutes') ? undefined : json['runtimeMinutes'],
        'year': !(0, runtime_1.exists)(json, 'year') ? undefined : json['year'],
        'adult': !(0, runtime_1.exists)(json, 'adult') ? undefined : json['adult'],
        'titleType': !(0, runtime_1.exists)(json, 'titleType') ? undefined : json['titleType'],
    };
}
exports.SearchDocFromJSONTyped = SearchDocFromJSONTyped;
function SearchDocToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'tconst': value.tconst,
        'titles': value.titles,
        'actors': value.actors,
        'directors': value.directors,
        'genres': value.genres,
        'characters': value.characters,
        'runtimeMinutes': value.runtimeMinutes,
        'year': value.year,
        'adult': value.adult,
        'titleType': value.titleType,
    };
}
exports.SearchDocToJSON = SearchDocToJSON;
//# sourceMappingURL=SearchDoc.js.map