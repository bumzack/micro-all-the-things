/* tslint:disable */
/* eslint-disable */
/**
 * Customer Service
 * Customer Service
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime';

/**
 *
 * @export
 * @interface Customer
 */
export interface Customer {
    /**
     *
     * @type {number}
     * @memberof Customer
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof Customer
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof Customer
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof Customer
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof Customer
     */
    password?: string;
    /**
     *
     * @type {Date}
     * @memberof Customer
     */
    created?: Date;
}

/**
 * Check if a given object implements the Customer interface.
 */
export function instanceOfCustomer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerFromJSON(json: any): Customer {
    return CustomerFromJSONTyped(json, false);
}

export function CustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Customer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': !exists(json, 'id') ? undefined : json['id'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
    };
}

export function CustomerToJSON(value?: Customer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'id': value.id,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'email': value.email,
        'password': value.password,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
    };
}

